{"files":[{"id":"a1497ddd-632f-4392-9cd3-b75afce7bcf3","name":"Code","type":"server_js","source":"var adnroidStringXML\u003d\"\u003c?xml version\u003d\\\"1.0\\\" encoding\u003d\\\"utf-8\\\"?\u003e\";\nvar adnroidStringStartResource\u003d\"\u003cresources\u003e\";\nvar adnroidStringEndResource\u003d\"\u003c/resources\u003e\";\nvar adnroidStringStartFormat\u003d\"\u003cstring name\u003d\\\"\";\nvar adnroidStringMiddleFormat\u003d\"\\\"\u003e\";\nvar adnroidStringEndFormat\u003d\"\u003c/string\u003e\";\n\nvar adnroidStringArrayStartFormat\u003d\"\u003cstring-array name\u003d\\\"\";\nvar adnroidStringArrayMiddleFormat\u003d\"\\\"\u003e\";\nvar adnroidStringArrayEndFormat\u003d\"\u003c/string-array\u003e\";\n\nvar adnroidStringItemStart\u003d\"\u003citem\u003e\";\nvar adnroidStringItemEnd\u003d\"\u003c/item\u003e\";\n\n/*\u003cstring-array name\u003d\"my_books\"\u003e\n        \u003citem\u003eScala Cookbook\u003c/item\u003e\n        \u003citem\u003ePlay Framework Recipes\u003c/item\u003e\n        \u003citem\u003eHow I Sold My Business: A Personal Diary\u003c/item\u003e\n        \u003citem\u003eA Survival Guide for New Consultants\u003c/item\u003e\n    \u003c/string-array\u003e*/\n\nvar iosString\u003d\"\\\"\";\n\nfunction doGet() {\n  \n  var ss \u003d SpreadsheetApp.openById(\u002716IicM5Oiz_UVpFbTEgw-GPTrr06fLT2evUIZjnivO40\u0027);\n  var sheet \u003d ss.getSheets()[0];\n  var range \u003d sheet.getDataRange();\n  var values \u003d range.getValues();\n  var length \u003d range.getValues()[0].length;\n  for(var x\u003d1;x\u003c\u003dlength-1;x++){\n    var stringObjects \u003d getRowsData(x,sheet, range)\n    \n    //Code for Android File Creation\n    var folder \u003d DriveApp.getFoldersByName(\"NoQueue\");\n    \n    if(!folder.hasNext()){\n      DriveApp.createFolder(\"NoQueue\");\n      folder \u003d DriveApp.getFoldersByName(\"NoQueue\");\n    }\n    var folderNoQueue \u003d folder.next();\n    var folder1 \u003d folderNoQueue.getFoldersByName(\"android\");\n    if(!folder1.hasNext()){\n      folderNoQueue.createFolder(\"android\");\n      folder1 \u003d folderNoQueue.getFoldersByName(\"android\");\n    }\n    var folderAndroid \u003d folder1.next();\n    var oldfile \u003d folderAndroid.getFilesByName(\"strings_\"+sheet.getRange(1, x+1).getValue()+\".xml\");\n    \n    if(oldfile.hasNext()){\n      oldfile.next().setTrashed(true);\n    }\n    \n    var finalAndroidString \u003d adnroidStringXML + \"\\n\" + adnroidStringStartResource + \"\\n\\n\" + stringObjects[0] + \"\\n\" + adnroidStringEndResource;\n    folderAndroid.createFile(\"strings_\"+sheet.getRange(1, x+1).getValue()+\".xml\", finalAndroidString);\n    \n    \n    \n    //Code for IOS File Creation\n    \n    var folder1ios \u003d folderNoQueue.getFoldersByName(\"ios\");\n    if(!folder1ios.hasNext()){\n      folderNoQueue.createFolder(\"ios\");\n      folder1ios \u003d folderNoQueue.getFoldersByName(\"ios\");\n    }\n    var folderIOS \u003d folder1ios.next();\n    var folder2ios \u003d folderIOS.getFoldersByName(\"\"+sheet.getRange(1, x+1).getValue());\n    if(!folder2ios.hasNext()){\n      folderIOS.createFolder(\"\"+sheet.getRange(1, x+1).getValue());\n      folder2ios \u003d folderIOS.getFoldersByName(\"\"+sheet.getRange(1, x+1).getValue());\n    }\n    \n    var folderLang \u003d folder2ios.next();\n    var oldfileIOS \u003d folderLang.getFilesByName(\"Localizable.strings\");\n    \n    if(oldfileIOS.hasNext()){\n      oldfileIOS.next().setTrashed(true);\n    }\n    \n    var file \u003d folderLang.createFile(\"Localizable.strings\", stringObjects[1]);\n  }\n\n}\n\n\n\nfunction getRowsData(x,sheet, range, columnHeadersRowIndex) {\n  columnHeadersRowIndex \u003d 1;\n  var numColumns \u003d range.getLastColumn() - range.getColumn() + 1;\n  var RangeLastColumn \u003d range.getLastColumn();\n  var RangeColum \u003d range.getColumn();\n  var headersRange \u003d sheet.getRange(columnHeadersRowIndex, range.getColumn(), 1, numColumns);\n  var headers \u003d headersRange.getValues()[0];\n  return getObjects(range.getValues(), normalizeHeaders(headers), x);\n}\n\n\nfunction getObjects(data, keys,x) {\n  var objects \u003d [];\n  var stringsInputAndroid \u003d \"\";\n  var stringsInputIOS \u003d \"\";\n  for(var rounds\u003dx;rounds\u003cx+1/*keys.length*/;rounds++){\n  for (var i \u003d 1; i \u003c data.length; ++i) {\n    if(data[i][0]!\u003d\"\" \u0026\u0026 data[i][rounds]!\u003d\"\"){\n      stringsInputAndroid \u003d stringsInputAndroid + adnroidStringStartFormat + data[i][0] + adnroidStringMiddleFormat + data[i][rounds] + adnroidStringEndFormat + \"\\n\";\n      stringsInputIOS \u003d stringsInputIOS + iosString + data[i][0] + iosString + \"\u003d\" + iosString + data[i][rounds] + iosString + \";\" + \"\\n\";\n    }\n    \n  }\n  }\n  objects.push(stringsInputAndroid);\n  objects.push(stringsInputIOS);\n  return objects;\n}\n\nfunction normalizeHeaders(headers) {\n  var keys \u003d [];\n  for (var i \u003d 0; i \u003c headers.length; ++i) {\n    var key \u003d normalizeHeader(headers[i]);\n    if (key.length \u003e 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n}\n\nfunction normalizeHeader(header) {\n  var key \u003d \"\";\n  var upperCase \u003d false;\n  for (var i \u003d 0; i \u003c header.length; ++i) {\n    var letter \u003d header[i];\n    if (letter \u003d\u003d \" \" \u0026\u0026 key.length \u003e 0) {\n      upperCase \u003d true;\n      continue;\n    }\n    if (!isAlnum(letter)) {\n      continue;\n    }\n    if (key.length \u003d\u003d 0 \u0026\u0026 isDigit(letter)) {\n      continue;\n    }\n    if (upperCase) {\n      upperCase \u003d false;\n      key +\u003d letter.toUpperCase();\n    } else {\n      key +\u003d letter.toLowerCase();\n    }\n  }\n  return key;\n}\n\nfunction isCellEmpty(cellData) {\n  return typeof(cellData) \u003d\u003d \"string\" \u0026\u0026 cellData \u003d\u003d \"\";\n}\n\nfunction isAlnum(char) {\n  return char \u003e\u003d \u0027A\u0027 \u0026\u0026 char \u003c\u003d \u0027Z\u0027 ||\n    char \u003e\u003d \u0027a\u0027 \u0026\u0026 char \u003c\u003d \u0027z\u0027 ||\n    isDigit(char);\n}\n\nfunction isDigit(char) {\n  return char \u003e\u003d \u00270\u0027 \u0026\u0026 char \u003c\u003d \u00279\u0027;\n}\n\nfunction arrayTranspose(data) {\n  if (data.length \u003d\u003d 0 || data[0].length \u003d\u003d 0) {\n    return null;\n  }\n\n  var ret \u003d [];\n  for (var i \u003d 0; i \u003c data[0].length; ++i) {\n    ret.push([]);\n  }\n\n  for (var i \u003d 0; i \u003c data.length; ++i) {\n    for (var j \u003d 0; j \u003c data[i].length; ++j) {\n      ret[j][i] \u003d data[i][j];\n    }\n  }\n\n  return ret;\n}"}]}